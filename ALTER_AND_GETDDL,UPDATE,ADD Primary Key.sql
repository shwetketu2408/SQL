 -----------------------------------DATE TYPE AND BETWEEN COMMAND----------------------------------------------------------------------
USE DATABASE DEMO_DATABASE;
CREATE OR REPLACE TABLE SK_SALES
(
CUSTOMER_ID VARCHAR(20),
ORDER_DATE DATE,
PRODUCT_ID INT);
DESCRIBE TABLE SK_SALES;
INSERT INTO SK_SALES VALUES
('A','2021-01-01',1),
('B','2021-02-02',2),
('C','2021-01-07',3),
('D','2022-01-01',4);
SELECT * FROM SK_SALES  WHERE ORDER_DATE BETWEEN '2021-01-01' AND '2022-02-01';
--------------------------------------PRIMARY KEY IS NOT ENFORCED BY SNOWFLAKE -------------------------------------------
---------SO HERE WE CAN WRITE DUPLICATE VALUE
USE DATABASE DEMO_DATABASE;
CREATE OR REPLACE TABLE SK_SALES
(
CUSTOMER_ID VARCHAR(20) primary key,
ORDER_DATE DATE,
PRODUCT_ID INT);
DESCRIBE TABLE SK_SALES;
INSERT INTO SK_SALES VALUES
('A','2021-01-01',1),
('A','2021-02-02',2),
('A','2021-01-07',3),
('A','2022-01-01','4');
SELECT * FROM SK_SALES;
---------------------------------NOT NULL IS ENFORCED BY SNOWFLAKE------------------------
USE DATABASE DEMO_DATABASE;
CREATE OR REPLACE TABLE SK_SALES
(
CUSTOMER_ID VARCHAR(20) PRIMARY KEY,---ALTHOUGH PRIMARY KEY IS NOT GETTING ENFORCED BUT WE WILL WRITE IT AS DETTORANCE SO THAT EVERYONE WILL TRY TO AVOID WRITTING DUPLICATE VALUE 
ORDER_DATE DATE NOT NULL,
PRODUCT_ID INT NOT NULL);
DESCRIBE TABLE SK_SALES;
INSERT INTO SK_SALES VALUES
('A','2021-01-01',1),
('B','2021-02-02',2),
('C','2021-01-07',3),
('D','2022-01-01',4);
SELECT * FROM SK_SALES;
--------------------IF YOU WANT TO CREATE A TABLE STRUCTURE LIKE PREVIOUSLY CREATE TABLLE GO WITH 'LIKE' COMMAND-------------------
---EVERYTHING WILL BE COPIED EXCEPT DATA
CREATE OR REPLACE TABLE SK_SALES_COPY LIKE SK_SALES;
DESCRIBE TABLE SK_SALES_COPY;
SELECT *FROM SK_SALES_COPY;
-------------------IF YOU WANT TO CREATE A TABLE STRUCTURE LIKE PREVIOUSLY CREATED TABLE ALONGWITH DATA GO WITH 'AS' COMMAND-----
CREATE OR REPLACE TABLE SK_SALES_COPY_DATA AS
SELECT * FROM SK_SALES;
DESCRIBE TABLE SK_SALES_COPY_DATA;
SELECT *FROM SK_SALES_COPY_DATA;
------------------IF YOU WANT TO COPY SPECIFIC COLUMN ALONG WITH DATA----------------------------------------------
CREATE OR REPLACE TABLE SK_SALES_COPY_DATA AS
SELECT CUSTOMER_ID,PRODUCT_ID FROM SK_SALES;
DESCRIBE TABLE SK_SALES_COPY_DATA;
SELECT *FROM SK_SALES_COPY_DATA;
----------------------ALTER COMMAND---------------------------------------------------------------------------------
--IT ADD ANOTHER COLUMN WHEN TABLE IS EMPTY
ALTER TABLE SK_SALES_COPY add column AGE INT;
DESCRIBE TABLE SK_SALES_COPY;
SELECT * FROM SK_SALES_COPY;
--ALTER COMMAND WHEN TABLE CONTAINS DATA(THIS GOT EXECUTED BECAUSE THIS DOESN'T CONTAINS ANY CONSTRAINTS)
ALTER TABLE SK_SALES_COPY_DATA 
add column COUNTRY VARCHAR(20);
DESCRIBE TABLE SK_SALES_COPY_DATA;
SELECT * FROM SK_SALES_COPY_DATA;
----BUT WHEN WE PROVIDE CONSTRAINT THEN TABLE WOULD NOT GET MADE(SO NOT_NULL CONSTRAINT NOT TAKEN BY SNOWFLAKE)
ALTER TABLE SK_SALES_COPY_DATA 
add column PAN_NO VARCHAR(20) NOT NULL;
DESCRIBE TABLE SK_SALES_COPY_DATA;
SELECT * FROM SK_SALES_COPY_DATA;
---SIMILARLY PRIMARY KEY CONSTRAINT NOT TAKEN BY SNOWFLAKE
ALTER TABLE SK_SALES_COPY_DATA 
add column PAN_NUMBER VARCHAR(20) DEFAULT'NONE';
DESCRIBE TABLE SK_SALES_COPY_DATA;
SELECT * FROM SK_SALES_COPY_DATA;
-----SNOWFLAKE TAKES DEFAULT CONSTRAINT
ALTER TABLE SK_SALES_COPY_DATA 
add column PHONE_NUMBER VARCHAR(10) DEFAULT'0000XXXXXX';
DESCRIBE TABLE SK_SALES_COPY_DATA;
SELECT * FROM SK_SALES_COPY_DATA;
-----ADD PRIMARY KEY ON THE EXISTING COLUMN
ALTER TABLE SK_SALES_COPY_DATA
ADD PRIMARY KEY (customer_id);
---------------------------------TO DROP PRIMARY KEY-----------------
ALTER TABLE SK_SALES_COPY_DATA
DROP PRIMARY KEY;

-------------------------------DEFAULT WITH TO_DATE FUNCTION-----------------------------------------------------------------------------------------
--DEFAULT IS PROVIDED SO IF THE USER DON'T SPECIFY ANY DATE JUST LIKE IN 'E'(BELOW EXAMPLE),SO BY DEFAULT IT HAS TAKEN DATE PROVIDED IN THE DATE
CREATE OR REPLACE TABLE SK_SALES
(
CUSTOMER_ID VARCHAR(20) PRIMARY KEY, 
ORDER_DATE DATE DEFAULT TO_DATE('2023-01-07'),
PRODUCT_ID INT NOT NULL);
DESCRIBE TABLE SK_SALES;
INSERT INTO SK_SALES VALUES
('A','2021-01-01',1),
('B','2021-02-02',2),
('C','2021-01-07',3),
('D','2022-01-01',4);
INSERT INTO SK_SALES(CUSTOMER_ID,PRODUCT_ID)
VALUES('E','5');
SELECT * FROM SK_SALES;

-------------------------------------------------------------------------------------------------------------------------------
alter TABLE SK_SALES_COPY_DATA
DROP PRIMARY KEY;
alter TABLE SK_SALES_COPY_DATA
ADD COLUMN AADHAR_NO VARCHAR(15) PRIMARY KEY;
alter TABLE SK_SALES_COPY_DATA
ADD CONSTRAINT PK_CONSTR_CUST_ID PRIMARY KEY(CUSTOMER_ID);
-------------------HOW PRIMARY KEY IS ADDED ?------------------------------------------------------------------------------------
CREATE OR REPLACE TABLE SK_SALES
(
CUSTOMER_ID VARCHAR(20) primary key,
ORDER_DATE DATE DEFAULT TO_DATE('2023-01-08'),
PRODUCT_ID INT);
INSERT INTO SK_SALES VALUES
('A','2021-01-01',1),
('B','2021-02-02',2),
('C','2021-01-07',3),
('D','2022-01-01',4);
INSERT INTO SK_SALES(CUSTOMER_ID,PRODUCT_ID)
VALUES('E','5');
SELECT * FROM SK_SALES;
---CREATE A COPY OF THE DATA IN A NEW COPIED TABLE
CREATE OR REPLACE TABLE SK_SALES_COPY_DATA AS
SELECT * FROM SK_SALES;
----DESCRIBING TABLE
DESCRIBE TABLE SK_SALES_COPY_DATA;

---STEP 1) ADD A PRIMARY KEY TO AN EXISTING COLUMN
ALTER TABLE SK_SALES_COPY_DATA
ADD PRIMARY KEY(CUSTOMER_ID);
DESCRIBE TABLE SK_SALES_COPY_DATA;
---STEP 2) DROP THE PRIMARY KEY AND CREATE A NEW COLUMN TO THE EXISTING TABLE AND MAKE THAR PRIMARY KEY
ALTER TABLE SK_SALES_COPY_DATA
DROP PRIMARY KEY;
DESCRIBE TABLE SK_SALES_COPY_DATA;
---STEP 3) ADD A COLUMN TO THE TABLE IN WHICH YOU WANT TO ADD PRIMARY KEY
ALTER TABLE SK_SALES_COPY_DATA
ADD COLUMN AADHAR_NO VARCHAR(20);

---STEP 4)ADD THE COLUMN FIRST AND THEN MAKE IT PRIMARY USING 2ND STEP PROCESS
ALTER TABLE SK_SALES_COPY_DATA
ADD PRIMARY KEY (AADHAR_NO);
DESCRIBE TABLE SK_SALES_COPY_DATA;

----------------------[GET_DDL(DATA DEFINITION LANGUAGE) COMMAND]-TO KNOW THE COMMAND OF TABLE(GIVEN BY CLIENT)------------------------------------------------------
--GET_DDL FUNCTION TO RETRIEVE A DDL STATEMENT THAT COULD BE EXECUTED TO RECREATE THE SPECIFIED TABLE
---THE STATEMENT(OBTAINED BY THIS CODE)ALSO INCLUDES THE CONSTRAINTS CURRENTLY SET ON A TABLE.
SELECT GET_DDL('TABLE','SK_SALES_COPY_DATA');
SELECT GET_DDL('TABLE','SK_SALES');
-----------------------UPDATE AND SET COMMAND----------------------------------
SELECT * FROM SK_SALES_COPY_DATA;
UPDATE SK_SALES_COPY_DATA
SET AADHAR_NO ='XXXX-XXXX-XXXX' WHERE AADHAR_NO IS NULL;
--------------DIFFERENCE BETWEEN ALTER AND UPDATE?-------------------------------------------------
--ALTER-IT IS USED TO MODIFY THE STRUCTURE OF THE TABLE
--UPDATE-IT IS USED TO CHANGE THE CONTENTS OF THE TABLE
------###########################AGAIN CLEARLY MADE BY SIR TO ADD PRIMARY KEY WITHOUT DATA AND WITH DATA---------------
use database demo_database;

----WHEN THERE IS NO DATA AVAIALBLE --HARDLY 1-5 % IN REALITY 
--WE WILL FIRSTLY KNOW THE TABLE CONTENTS GIVEN BY CLIENTS WITH THE HELP OF GET DDL COMMAND
CREATE OR REPLACE TABLE aj_sales 
(
  customer_id VARCHAR(1) PRIMARY KEY ,
  order_date DATE DEFAULT TO_DATE('2022-12-10'),
  product_id INT not null);
  
CREATE OR REPLACE TABLE  aj_sales_COPY LIKE  aj_sales;
DESCRIBE TABLE aj_sales_COPY;

ALTER TABLE aj_sales_COPY
DROP PRIMARY KEY;

alter table aj_sales_COPY
ADD column aadhar_no varchar(15) PRIMARY KEY;

----WHEN THERE IS DATA AVAIALBLE --HARDLY 1-5 % IN REALITY 
INSERT INTO aj_sales
VALUES
('A', '2021-01-01', '1'),
('A', '2021-01-01', '2'),
('A', '2021-01-07', '2'),
('A', '2021-01-10', '3'),
('A', '2021-01-11', '3'),
('A', '2021-01-11', '3'),
('B', '2021-01-01', '2'),
('B', '2021-01-02', '2'),
('B', '2021-01-04', '1'),
('B', '2021-01-11', '1'),
('B', '2021-01-16', '3'),
('C','2021-01-07', '3'),
('d','2021-01-23', 4); 

INSERT INTO aj_sales(customer_id,product_id)
VALUES('E',5); 

SELECT * FROM AJ_SALES;

CREATE OR REPLACE TABLE  aj_sales_COPY_DATA AS
SELECT * FROM AJ_SALES;

SELECT * FROM AJ_SALES_COPY_DATA;

DESCRIBE TABLE AJ_SALES_COPY_DATA;

ALTER TABLE AJ_SALES_COPY_DATA
DROP PRIMARY KEY;

alter table aj_sales_copy_data
ADD column aadhar_no varchar(15);

-- ADD THE COLUMN FIRST AND THEN MAKE IT PK USING 2 STEP PROCESS
alter table aj_sales_copy_data
ADD PRIMARY KEY (aadhar_no);